/**
 * Generated by orval v7.3.0 🍺
 * Do not edit manually.
 * Kairos API
 * API do sistema Kairos para gestão de membros, grupos e eventos
 * OpenAPI spec version: 1.0.0
 */
import { useMutation } from "@tanstack/react-query";
import type {
	MutationFunction,
	UseMutationOptions,
	UseMutationResult,
} from "@tanstack/react-query";
import { customInstance } from "../../axios-instance";

export const postAuthRefreshToken = (signal?: AbortSignal) => {
	return customInstance<void>({
		url: `/auth/refresh-token`,
		method: "POST",
		signal,
	});
};

export const getPostAuthRefreshTokenMutationOptions = <
	TError = unknown,
	TContext = unknown,
>(options?: {
	mutation?: UseMutationOptions<
		Awaited<ReturnType<typeof postAuthRefreshToken>>,
		TError,
		void,
		TContext
	>;
}): UseMutationOptions<
	Awaited<ReturnType<typeof postAuthRefreshToken>>,
	TError,
	void,
	TContext
> => {
	const { mutation: mutationOptions } = options ?? {};

	const mutationFn: MutationFunction<
		Awaited<ReturnType<typeof postAuthRefreshToken>>,
		void
	> = () => {
		return postAuthRefreshToken();
	};

	return { mutationFn, ...mutationOptions };
};

export type PostAuthRefreshTokenMutationResult = NonNullable<
	Awaited<ReturnType<typeof postAuthRefreshToken>>
>;

export type PostAuthRefreshTokenMutationError = unknown;

export const usePostAuthRefreshToken = <
	TError = unknown,
	TContext = unknown,
>(options?: {
	mutation?: UseMutationOptions<
		Awaited<ReturnType<typeof postAuthRefreshToken>>,
		TError,
		void,
		TContext
	>;
}): UseMutationResult<
	Awaited<ReturnType<typeof postAuthRefreshToken>>,
	TError,
	void,
	TContext
> => {
	const mutationOptions = getPostAuthRefreshTokenMutationOptions(options);

	return useMutation(mutationOptions);
};
